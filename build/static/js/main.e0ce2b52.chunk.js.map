{"version":3,"sources":["logo.svg","images/Loading.gif","Search.js","IndividualResult.js","ResultsDisplay.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","_ref","updateSearch","react_default","a","createElement","id","type","onInput","IndividualResult","result","className","href","target","ResultsDisplay","results","fetchInProgress","hasMore","nextResults","hasPrevious","previousResults","src","require","map","i","src_IndividualResult_0","key","onClick","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","eventTargetValue","pageNumber","fetch","concat","then","response","text","data","state","searchValue","doc","DOMParser","parseFromString","downloadList","querySelectorAll","titleList","tableDataList","authorsList","length","anchorTagList","getElementsByTagName","authorHrefList","getAttribute","includes","push","listUpdated","authors","listNumber","title","innerText","genliblink","j","itemArray","nextPageList","hasNext","console","log","setState","searchResults","currentPage","updateSearchHandler","event","value","getNextResults","getPreviousResults","src_Search_0","src_ResultsDisplay_0","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","chrome","runtime","sendMessage","msg","searchVal","dispatchEvent","Event","bubbles","cancelable","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0ce2b52.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/Loading.d78d121f.gif\";","import React from 'react';\nimport './Search.css';\n\nconst Search = ({updateSearch}) => {\n    return (\n        <div>\n            <input id=\"searchbar\" type=\"search\" onInput={updateSearch}></input>\n        </div>\n    );\n}\n\nexport default Search;","import React from 'react';\nimport './IndividualResult.css';\nconst IndividualResult = ({ result }) => {\n    return (\n        <div className=\"result-div\">\n            <p className=\"resultnumber\"> {result[0]} </p>\n            <ul className=\"result-list\">\n                <li className=\"titleelement\"><strong>Title:</strong> {result[1]}</li>\n                <li className=\"authorelement\"><strong>Author(s):</strong> {result[2]}</li>\n                <a className=\"download\" href={result[3]} target=\"_blank\"><li>Download</li></a>\n            </ul>\n        </div>\n    );\n}\n\nexport default IndividualResult;","import React from 'react';\nimport './ResultsDisplay.css'\nimport IndividualResult from './IndividualResult'\n\nconst ResultsDisplay = ({ results, fetchInProgress, hasMore, nextResults, hasPrevious, previousResults }) => {\n    if (fetchInProgress === true) {\n        return (\n            <div className=\"center-results\">\n                <p> Results: </p>\n                <img className=\"loading\" src={require('./images/Loading.gif')}></img>\n            </div>\n        )\n\n    } else if (hasMore === false) {\n        if (hasPrevious === true) {\n            return (\n                <div className=\"center-results\">\n                    <p> Results: </p>\n                    {\n                        results.map((result, i) => {\n                            return (\n                                <IndividualResult key={i} result={result} />\n                            )\n                        })\n                    }\n                    <div className=\"buttonContainer\">\n                        <button className=\"previousButton\" onClick={previousResults}>Previous</button>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"center-results\">\n                    <p> Results: </p>\n                    {\n                        results.map((result, i) => {\n                            return (\n                                <IndividualResult key={i} result={result} />\n                            )\n                        })\n                    }\n                </div>\n            );\n        }\n    } else if (hasMore === true) {\n        if (hasPrevious === true) {\n            return (\n                <div className=\"center-results\">\n                    <p> Results: </p>\n                    {\n                        results.map((result, i) => {\n                            return (\n                                <IndividualResult key={i} result={result} />\n                            )\n                        })\n                    }\n                    <div className=\"buttonContainer\">\n                        <button className=\"previousButton\" onClick={previousResults}>Previous</button>\n                        <button className=\"nextButton\" onClick={nextResults}>Next</button>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"center-results\">\n                    <p> Results: </p>\n                    {\n                        results.map((result, i) => {\n                            return (\n                                <IndividualResult key={i} result={result} />\n                            )\n                        })\n                    }\n                    <div className=\"buttonContainer\">\n                        <button className=\"nextButton\" onClick={nextResults}>Next</button>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\nexport default ResultsDisplay;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Search from './Search'\nimport ResultsDisplay from './ResultsDisplay'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      searchValue: '',\n      searchResults: [],\n      fetchInProgress: false,\n      currentPage: 0,\n      hasMore: false,\n      hasPrevious: false\n    }\n  }\n\n  updateSearch = (eventTargetValue, pageNumber) => {\n  \n    fetch(`http://gen.lib.rus.ec/search.php?req=${eventTargetValue}&phrase=1&view=simple&column=def&sort=title&sortmode=DESC&page=${pageNumber}`)\n      .then((response) => response.text())\n      .then((data) => {\n        if (eventTargetValue === this.state.searchValue) {\n          var parser = new DOMParser();\n          var doc = parser.parseFromString(data, \"text/html\");\n          //console.log(doc);\n\n          let downloadList = doc.querySelectorAll('[title = \"Gen.lib.rus.ec\"]')\n          let titleList = doc.querySelectorAll('[href *= \"book/index.php?md5=\"]')\n          let tableDataList = doc.querySelectorAll('td')\n          let authorsList = []\n\n          for (let i = 0; i < tableDataList.length; i++) {\n\n            let anchorTagList = tableDataList[i].getElementsByTagName('a')\n            let authorHrefList = []\n            for (let i = 0; i < anchorTagList.length; i++) {\n              if (anchorTagList[i].getAttribute('href').includes('column=author') || anchorTagList[i].getAttribute('href').includes('column[]=author')) {\n                authorHrefList.push(anchorTagList[i])\n              }\n            }\n            if (authorHrefList.length > 0) {\n              authorsList.push(authorHrefList)\n            }\n          }\n\n          let listUpdated = []\n          for (let i = 0; i < downloadList.length; i++) {\n            let authors = ''\n            let listNumber = (i + 1)\n            let title = titleList[i].innerText\n            let genliblink = downloadList[i].getAttribute('href')\n            for (let j = 0; j < authorsList[i].length; j++) {\n              if (j === (authorsList[i].length - 1)) {\n                authors += authorsList[i][j].innerText\n              } else {\n                authors += authorsList[i][j].innerText + ', '\n              }\n            }\n            \n            let itemArray = [listNumber, title, authors, genliblink]\n            listUpdated.push(itemArray)\n          }\n\n          let nextPageList = doc.querySelectorAll('[href *= \"&page=\"]')\n          let hasNext = false;\n          let hasPrevious = false;\n          for (let i = 0; i < nextPageList.length; i++){\n            console.log(nextPageList[i].getAttribute('href'))\n            if (nextPageList[i].getAttribute('href').includes(\"&page=\" + (pageNumber+1))) {\n              hasNext = true\n            }\n            if (nextPageList[i].getAttribute('href').includes(\"&page=\" + (pageNumber-1))) {\n              hasPrevious = true\n            }\n          }\n\n          this.setState({\n            searchResults: listUpdated,\n            fetchInProgress: false,\n            hasMore: hasNext,\n            hasPrevious: hasPrevious,\n            currentPage: pageNumber\n          })\n\n        } \n      })\n  }\n\n  updateSearchHandler = (event) => {\n    const eventTargetValue = event.target.value;\n    this.setState({\n      searchValue: event.target.value,\n      fetchInProgress: true,\n    })\n    this.updateSearch(eventTargetValue, 1)\n  }\n\n  getNextResults = () => {\n    const eventTargetValue = this.state.searchValue;\n    this.setState({\n      fetchInProgress: true,\n    })\n    this.updateSearch(eventTargetValue, this.state.currentPage+1)\n  }\n\n  getPreviousResults = () => {\n    const eventTargetValue = this.state.searchValue;\n    this.setState({\n      fetchInProgress: true,\n    })\n    this.updateSearch(eventTargetValue, this.state.currentPage-1)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <Search updateSearch={this.updateSearchHandler} />\n        <ResultsDisplay fetchInProgress={this.state.fetchInProgress} results={this.state.searchResults} hasMore={this.state.hasMore} hasPrevious={this.state.hasPrevious} nextResults={this.getNextResults} previousResults={this.getPreviousResults}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*global chrome*/\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nlet searchVal = '';\n\nchrome.runtime.sendMessage({ msg: 'give me searchValue pls' }, function (response) {\n    document.getElementById('searchbar').value = response.searchVal\n    if (response.searchVal.length > 0) {\n        document.getElementById('searchbar').dispatchEvent(new Event('input', { 'bubbles': true, 'cancelable': false }))\n    }\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}