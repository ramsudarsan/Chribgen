{"map":"{\"version\":3,\"sources\":[\"/home/ram385/chromeextensions/chribgen/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/home/ram385/chromeextensions/chribgen/src/logo.svg\",\"/home/ram385/chromeextensions/chribgen/src/Search.js\",\"/home/ram385/chromeextensions/chribgen/src/IndividualResult.js\",\"/home/ram385/chromeextensions/chribgen/src/ResultsDisplay.js\",\"/home/ram385/chromeextensions/chribgen/src/App.js\",\"/home/ram385/chromeextensions/chribgen/src/serviceWorker.js\",\"/home/ram385/chromeextensions/chribgen/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Search\",\"_ref\",\"updateSearch\",\"react_default\",\"a\",\"createElement\",\"type\",\"onChange\",\"IndividualResult\",\"result\",\"className\",\"ResultsDisplay\",\"results\",\"map\",\"i\",\"src_IndividualResult\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"event\",\"fetch\",\"concat\",\"target\",\"value\",\"then\",\"response\",\"text\",\"data\",\"doc\",\"DOMParser\",\"parseFromString\",\"list\",\"querySelectorAll\",\"list2\",\"listUpdated\",\"length\",\"title\",\"push\",\"innerText\",\"getAttribute\",\"setState\",\"searchResults\",\"state\",\"searchValue\",\"src_Search\",\"src_ResultsDisplay_0\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"0IAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2LCUzBC,eARA,SAAAC,GAAoB,IAAlBC,EAAkBD,EAAlBC,aACb,OACIC,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,QAAA,CAAOC,KAAK,SAASC,SAAUL,OCK5BM,SARU,SAAAP,GAAc,IAAZQ,EAAYR,EAAZQ,OACvB,OACIN,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,IAAA,CAAGK,UAAU,aAAaD,MCcvBE,EAfQ,SAAAV,GAAiB,IAAdW,EAAcX,EAAdW,QACtB,OACIT,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,IAAA,KAAA,cAEIO,EAAQC,IAAI,SAACJ,EAAQK,GACjB,OACIX,EAAAC,EAAAC,cAACU,EAAD,CAAkBN,OAAQA,QCwCnCO,cA5Cb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAOFlB,aAAe,SAACsB,GACdC,MAAK,4EAAAC,OAA6EF,EAAMG,OAAOC,MAA1F,8DACFC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GASL,IAPA,IAGIC,GAHS,IAAIC,WAGAC,gBAAgBH,EAAM,aACnCI,EAAOH,EAAII,iBAAiB,8BAC5BC,EAAQL,EAAII,iBAAiB,mCAC7BE,EAAc,GACTzB,EAAI,EAAGA,EAAIsB,EAAKI,OAAQ1B,IACT,mBAAlBsB,EAAKtB,GAAG2B,OACVF,EAAYG,KAAM5B,EAAI,EAAK,KAAOwB,EAAMxB,GAAG6B,UAAY,KAAOP,EAAKtB,GAAG8B,aAAa,SAGvF3B,EAAK4B,SAAS,CACZC,cAAeP,OAxBrBtB,EAAK8B,MAAQ,CACXC,YAAa,GACbF,cAAe,IAJL7B,wEAmCZ,OACEd,EAAAC,EAAAC,cAAA,MAAA,CAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAC4C,EAAD,CAAQ/C,aAAckB,KAAKlB,eAC3BC,EAAAC,EAAAC,cAAC6C,EAAD,CAAgBtC,QAASQ,KAAK2B,MAAMD,wBAvC1BK,EAAAA,WCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnC,KAAK,SAAAoC,GACjCA,EAAaC\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React from 'react';\\n\\nconst Search = ({updateSearch}) => {\\n    return (\\n        <div>\\n            <input type=\\\"search\\\" onChange={updateSearch}></input>\\n        </div>\\n    );\\n}\\n\\nexport default Search;\",\"import React from 'react';\\n\\nconst IndividualResult = ({result}) => {\\n    return (\\n        <div>\\n            <p className=\\\"results-p\\\">{result}</p>\\n        </div>\\n    );\\n}\\n\\nexport default IndividualResult;\",\"import React from 'react';\\nimport './ResultsDisplay.css'\\nimport IndividualResult from './IndividualResult'\\n\\nconst ResultsDisplay = ({ results }) => {\\n    return (\\n        <div>\\n            <p> Results: </p>\\n            {\\n                results.map((result, i) => {\\n                    return (\\n                        <IndividualResult result={result} />\\n                    )\\n                })\\n            }\\n        </div>\\n    );\\n}\\n\\nexport default ResultsDisplay;\",\"import React, { Component } from 'react';\\nimport logo from './logo.svg';\\nimport './App.css';\\nimport Search from './Search'\\nimport ResultsDisplay from './ResultsDisplay'\\n\\nclass App extends Component {\\n  constructor() {\\n    super()\\n    this.state = {\\n      searchValue: '',\\n      searchResults: []\\n    }\\n  }\\n\\n  updateSearch = (event) => {\\n    fetch(`https://cors-anywhere.herokuapp.com/http://gen.lib.rus.ec/search.php?req=${event.target.value}&phrase=1&view=simple&column=def&sort=title&sortmode=DESC`)\\n      .then((response) => response.text())\\n      .then((data) => {\\n\\n        var parser = new DOMParser();\\n\\n        // Parse the text\\n        var doc = parser.parseFromString(data, \\\"text/html\\\");\\n        let list = doc.querySelectorAll('[title = \\\"Gen.lib.rus.ec\\\"]')\\n        let list2 = doc.querySelectorAll('[href *= \\\"book/index.php?md5=\\\"]')\\n        let listUpdated = []\\n        for (let i = 0; i < list.length; i++) {\\n          if (list[i].title === 'Gen.lib.rus.ec') {\\n            listUpdated.push((i + 1) + '. ' + list2[i].innerText + ': ' + list[i].getAttribute('href'))\\n          }\\n        }\\n        this.setState({\\n          searchResults: listUpdated\\n        })\\n        \\n        // console.log((listUpdated))\\n      })\\n  }\\n\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <Search updateSearch={this.updateSearch} />\\n        <ResultsDisplay results={this.state.searchResults} />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,function(e,t,n){e.exports=n(21)},,,,,,function(e,t,n){},,function(e,t,n){e.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},function(e,t,n){},,function(e,t,n){},,function(e,t,n){\"use strict\";n.r(t);var r=n(0),a=n.n(r),c=n(2),o=n.n(c),s=(n(14),n(3)),l=n(4),u=n(6),i=n(5),h=n(7),p=(n(16),n(17),function(e){var t=e.updateSearch;return a.a.createElement(\"div\",null,a.a.createElement(\"input\",{type:\"search\",onChange:t}))}),m=(n(19),function(e){var t=e.result;return a.a.createElement(\"div\",null,a.a.createElement(\"p\",{className:\"results-p\"},t))}),d=function(e){var t=e.results;return a.a.createElement(\"div\",null,a.a.createElement(\"p\",null,\" Results: \"),t.map(function(e,t){return a.a.createElement(m,{result:e})}))},f=function(e){function t(){var e;return Object(s.a)(this,t),(e=Object(u.a)(this,Object(i.a)(t).call(this))).updateSearch=function(t){fetch(\"https://cors-anywhere.herokuapp.com/http://gen.lib.rus.ec/search.php?req=\".concat(t.target.value,\"&phrase=1&view=simple&column=def&sort=title&sortmode=DESC\")).then(function(e){return e.text()}).then(function(t){for(var n=(new DOMParser).parseFromString(t,\"text/html\"),r=n.querySelectorAll('[title = \"Gen.lib.rus.ec\"]'),a=n.querySelectorAll('[href *= \"book/index.php?md5=\"]'),c=[],o=0;o<r.length;o++)\"Gen.lib.rus.ec\"===r[o].title&&c.push(o+1+\". \"+a[o].innerText+\": \"+r[o].getAttribute(\"href\"));e.setState({searchResults:c})})},e.state={searchValue:\"\",searchResults:[]},e}return Object(h.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return a.a.createElement(\"div\",{className:\"App\"},a.a.createElement(p,{updateSearch:this.updateSearch}),a.a.createElement(d,{results:this.state.searchResults}))}}]),t}(r.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(a.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[8,2,1]]]);","extractedComments":[]}